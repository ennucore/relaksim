//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-32965470
// Cuda compilation tools, release 12.2, V12.2.91
// Based on NVVM 7.0.1
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	relaxKernel

.visible .entry relaxKernel(
	.param .u64 relaxKernel_param_0,
	.param .u32 relaxKernel_param_1,
	.param .u32 relaxKernel_param_2,
	.param .f64 relaxKernel_param_3,
	.param .u64 relaxKernel_param_4,
	.param .u32 relaxKernel_param_5
)
{
	.reg .pred 	%p<17>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<16>;
	.reg .f64 	%fd<13>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd2, [relaxKernel_param_0];
	ld.param.u32 	%r2, [relaxKernel_param_1];
	ld.param.u32 	%r3, [relaxKernel_param_2];
	ld.param.f64 	%fd2, [relaxKernel_param_3];
	ld.param.u64 	%rd3, [relaxKernel_param_4];
	ld.param.u32 	%r4, [relaxKernel_param_5];
	mov.u32 	%r5, %ntid.x;
	mov.u32 	%r6, %ctaid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r8, %r6, %r5, %r7;
	mov.u32 	%r9, %ntid.y;
	mov.u32 	%r10, %ctaid.y;
	mov.u32 	%r11, %tid.y;
	mad.lo.s32 	%r12, %r10, %r9, %r11;
	mad.lo.s32 	%r1, %r12, %r2, %r8;
	setp.lt.s32 	%p1, %r8, 1;
	setp.lt.s32 	%p2, %r12, 1;
	or.pred  	%p3, %p1, %p2;
	add.s32 	%r13, %r2, -1;
	setp.ge.s32 	%p4, %r8, %r13;
	or.pred  	%p5, %p3, %p4;
	setp.ge.s32 	%p6, %r12, %r13;
	or.pred  	%p7, %p6, %p5;
	setp.lt.s32 	%p8, %r1, %r2;
	or.pred  	%p9, %p8, %p7;
	add.s32 	%r14, %r1, %r2;
	setp.ge.s32 	%p10, %r14, %r4;
	or.pred  	%p11, %p9, %p10;
	setp.ge.s32 	%p12, %r8, %r3;
	setp.ge.s32 	%p13, %r12, %r3;
	and.pred  	%p14, %p13, %p12;
	or.pred  	%p15, %p14, %p11;
	@%p15 bra 	$L__BB0_4;

	cvta.to.global.u64 	%rd4, %rd2;
	mul.wide.s32 	%rd5, %r1, 8;
	add.s64 	%rd1, %rd4, %rd5;
	ld.global.f64 	%fd3, [%rd1+8];
	ld.global.f64 	%fd4, [%rd1+-8];
	add.f64 	%fd5, %fd4, %fd3;
	sub.s32 	%r15, %r1, %r2;
	mul.wide.s32 	%rd6, %r15, 8;
	add.s64 	%rd7, %rd4, %rd6;
	ld.global.f64 	%fd6, [%rd7];
	add.f64 	%fd7, %fd5, %fd6;
	mul.wide.s32 	%rd8, %r2, 8;
	add.s64 	%rd9, %rd1, %rd8;
	ld.global.f64 	%fd8, [%rd9];
	add.f64 	%fd9, %fd7, %fd8;
	mul.f64 	%fd1, %fd9, 0d3FD0000000000000;
	ld.global.f64 	%fd10, [%rd1];
	sub.f64 	%fd11, %fd1, %fd10;
	abs.f64 	%fd12, %fd11;
	setp.leu.f64 	%p16, %fd12, %fd2;
	@%p16 bra 	$L__BB0_3;

	cvta.to.global.u64 	%rd10, %rd3;
	mov.u16 	%rs1, 0;
	st.global.u8 	[%rd10], %rs1;

$L__BB0_3:
	st.global.f64 	[%rd1], %fd1;

$L__BB0_4:
	ret;

}

